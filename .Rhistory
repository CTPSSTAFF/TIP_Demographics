p75_perc,
disab_round,
disab_perc
)
write.csv(final, output_table)
# qc
all_bgs <- read.csv(input_blkgrps_table)
bg_cen_qc <- merge(all_bgs %>% select(geoid), bg20, by.x ='geoid', by.y ='GEOID')
sum_test <- sum(bg_cen_qc$P2_001N)
# write.csv(bg_cen_qc, "\\Users\\sstrumwasser.AD\\Documents\\ArcGIS\\Projects\\needs_assessment_proximity\\R_outputs\\charging_stations_half_mile_equity_qc.csv")
library(dplyr)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidycensus)
library(tidyverse)
library(stringr)
library(ggplot2)
library(readr)
# configuration
input_blkgrps_table <- "\\Users\\sstrumwasser.AD\\Documents\\ArcGIS\\Projects\\needs_assessment_proximity\\arcpy_outputs\\ebikes_bg_af.csv"
input_tracts_table <- "\\Users\\sstrumwasser.AD\\Documents\\ArcGIS\\Projects\\needs_assessment_proximity\\arcpy_outputs\\ebikes_tract_af.csv"
# if you have multiple input geometries, combine them here:
#
# input_blkgrps_table <- do.call("rbind", list( - BLOCK GROUP TABLES HERE - ))
# input_tracts_table <- do.call("rbind", list( - TRACT TABLES HERE - ))
output_table <- "\\Users\\sstrumwasser.AD\\Documents\\ArcGIS\\Projects\\needs_assessment_proximity\\R_outputs\\ebikes_results.csv"
# Census API key set up
#census_api_key("e4bec76221ba04c7df76c7c580659bf1f54ed2c1", install = TRUE)
# First time, reload your environment so you can use the key without restarting R.
readRenviron("~/.Renviron")
# You can check it with:
Sys.getenv("CENSUS_API_KEY")
# ACS 2020 Fields
# universe
acs_noninst_pop <- c("b18101_001e")
# senior
acs_sr_noninst_pop <- c("b18101_015e","b18101_018e","b18101_034e","b18101_037e")
# disabled
acs_disabled_pop <- c("b18101_004e","b18101_007e","b18101_010e","b18101_013e","b18101_016e","b18101_019e",
"b18101_023e","b18101_026e","b18101_029e","b18101_032e","b18101_035e","b18101_038e")
# senior disabled
acs_sr_disab_pop <- c("b18101_016e","b18101_019e","b18101_035e","b18101_038e")
# number of households
acs_hh <- c("b25044_001e")
# 0 vehicle households
acs_0veh_hh <- c("b25044_003e","b25044_010e")
# low income households
acs_low_inc_hh <- c("b19001_001e","b19001_002e","b19001_003e","b19001_004e","b19001_005e","b19001_006e","b19001_007e","b19001_008e","b19001_009e","b19001_010e")
# lep universe
acs_pop_5p <- c("b16004_001e")
# lep populations
acs_lep_pop <- c("b16004_001e","b16004_003e","b16004_005e","b16004_010e","b16004_015e","b16004_020e","b16004_025e","b16004_027e","b16004_032e","b16004_037e",
"b16004_042e","b16004_047e","b16004_049e","b16004_054e","b16004_059e","b16004_064e")
# poverty status determined estimate
pov_stat_det_est <- c("c17002_001e")
# poverty status determined margin of error
pov_stat_det_moe <- c("c17002_001m")
# income less than 2x poverty level population
lt_2x_pov_est <- c("c17002_001e","c17002_008e")
lt_2x_pov_moe <- c("c17002_001m","c17002_008m")
# 16 or older population
acs_pop16p <- c("b23001_001e")
acs_workers16p <- c("b08301_001e")
acs_workers16p_shr <- c("b23001_001e","b08301_001e")
acs_pop75p <- c("B01001_023E","B01001_024E","B01001_025E","B01001_047E","B01001_048E","B01001_049E")
acs_pop18u <- c("B01001_001E","B01001_003E","B01001_004E","B01001_005E","B01001_006E","B01001_027E","B01001_028E","B01001_029E","B01001_030E")
#all acs fields
acs_fields <- c(acs_noninst_pop,acs_sr_noninst_pop,acs_disabled_pop,acs_sr_disab_pop,
acs_hh,acs_0veh_hh,acs_low_inc_hh,acs_pop_5p,acs_lep_pop,pov_stat_det_est,
pov_stat_det_moe,lt_2x_pov_est,lt_2x_pov_moe,acs_pop16p,acs_workers16p,
acs_workers16p_shr,acs_pop75p,acs_pop18u)
print("Done.")
acs_yr <- 2022
# download block group geography and demographic data
acsbgs <- get_acs(geography = 'block group', variables = toupper(acs_fields), year = acs_yr, state = "MA", output = 'wide')
# download tract geography and demographic data
acstrts <- get_acs(geography = 'tract', variables = toupper(acs_fields), year = acs_yr, state = "MA", output = 'wide')
View(acs_vars)
get_vars()
tidycensus_vars = load_variables()
tidycensus_vars = load_variables(2022)
tidycensus_vars = load_variables('2022')
tidycensus_vars = load_variables('2020')
tidycensus_vars = load_variables('2020', 'pl')
View(tidycensus_vars)
tidycensus_vars = load_variables('2020', 'dhc')
tidycensus_vars = load_variables('2020', 'dp')
tidycensus_vars = load_variables('2020', 'pl')
View(tidycensus_vars)
tidycensus_vars = load_variables(2020, 'dhc')
install.packages("tidycensus")
tidycensus_vars = load_variables(2020, 'dhc')
library(tidycensus)
tidycensus_vars = load_variables(2020, 'dhc')
library(tidycensus)
knitr::opts_chunk$set(echo = TRUE)
# Grab Census 2020 geography, total population, and minority data
# download block groups and minority data and total population data
bg20 <-
get_decennial(geography = 'block group',
variables = c('P2_001N', 'P2_003N', # white and minority
'P12_001N', 'P12_023N', 'P12_024N', 'P12_025N', 'P12_047',
'P12_048', 'P12_049', # Older adults
'P12_003N', 'P12_004N', 'P12_005N', 'P12_006N', 'P12_027N',
'P12_028N', 'P12_029N', 'P12_030N'), # Youth
year = 2020,
sumfile = "pl",
state = "MA",
output = 'wide')
tidycensus_vars_acs <- load_variables(2022, 'acs5')
View(tidycensus_vars_acs)
vars_acs5_2021 <- load_variables(2021, "acs5")
View(vars_acs5_2021)
# Grab Census 2020 geography, total population, and minority data
# download block groups and minority data and total population data
bg20 <-
get_decennial(geography = 'block group',
variables = c('P2_001N', 'P2_003N', # white and minority
'P12_001N', 'P12_023N', 'P12_024N', 'P12_025N', 'P12_047',
'P12_048', 'P12_049', # Older adults
'P12_003N', 'P12_004N', 'P12_005N', 'P12_006N', 'P12_027N',
'P12_028N', 'P12_029N', 'P12_030N'), # Youth
year = 2020,
sumfile = "pl",
state = "MA",
output = 'wide')
dec_vars_pl <- load_variables(2020, "pl")
dec_vars_dhc <- load_variables(2020, "dhc")
View(dec_vars_pl)
View(dec_vars_dhc)
# Grab Census 2020 geography, total population, and minority data
# download block groups and minority data and total population data
bg20 <-
get_decennial(geography = 'block group',
variables = c('P2_001N', 'P2_003N', # white and minority
'P12_001N', 'P12_023N', 'P12_024N', 'P12_025N', 'P12_047',
'P12_048', 'P12_049', # Older adults
'P12_003N', 'P12_004N', 'P12_005N', 'P12_006N', 'P12_027N',
'P12_028N', 'P12_029N', 'P12_030N'), # Youth
year = 2020,
sumfile = "dhc",
state = "MA",
output = 'wide')
# Grab Census 2020 geography, total population, and minority data
# download block groups and minority data and total population data
bg20 <-
get_decennial(geography = 'block group',
variables = c('P2_001N', 'P2_003N', # white and minority
'P12_001N', 'P12_023N', 'P12_024N', 'P12_025N', 'P12_047N',
'P12_048N', 'P12_049N', # Older adults
'P12_003N', 'P12_004N', 'P12_005N', 'P12_006N', 'P12_027N',
'P12_028N', 'P12_029N', 'P12_030N'), # Youth
year = 2020,
sumfile = "dhc",
state = "MA",
output = 'wide')
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidycensus)
library(tidyverse)
library(stringr)
library(ggplot2)
library(readr)
# Census API key set up
#census_api_key("e4bec76221ba04c7df76c7c580659bf1f54ed2c1", install = TRUE)
# First time, reload your environment so you can use the key without restarting R.
readRenviron("~/.Renviron")
# You can check it with:
Sys.getenv("CENSUS_API_KEY")
# ACS 2020 Fields
# universe
acs_noninst_pop <- c("b18101_001e")
# senior
acs_sr_noninst_pop <- c("b18101_015e","b18101_018e","b18101_034e","b18101_037e")
# disabled
acs_disabled_pop <- c("b18101_004e","b18101_007e","b18101_010e","b18101_013e","b18101_016e","b18101_019e",
"b18101_023e","b18101_026e","b18101_029e","b18101_032e","b18101_035e","b18101_038e")
# senior disabled
acs_sr_disab_pop <- c("b18101_016e","b18101_019e","b18101_035e","b18101_038e")
# number of households
acs_hh <- c("b25044_001e")
# 0 vehicle households
acs_0veh_hh <- c("b25044_003e","b25044_010e")
# low income households
acs_low_inc_hh <- c("b19001_001e","b19001_002e","b19001_003e","b19001_004e","b19001_005e","b19001_006e","b19001_007e","b19001_008e","b19001_009e","b19001_010e")
# lep universe
acs_pop_5p <- c("b16004_001e")
# lep populations
acs_lep_pop <- c("b16004_001e","b16004_003e","b16004_005e","b16004_010e","b16004_015e","b16004_020e","b16004_025e","b16004_027e","b16004_032e","b16004_037e",
"b16004_042e","b16004_047e","b16004_049e","b16004_054e","b16004_059e","b16004_064e")
# poverty status determined estimate
pov_stat_det_est <- c("c17002_001e")
# poverty status determined margin of error
pov_stat_det_moe <- c("c17002_001m")
# income less than 2x poverty level population
lt_2x_pov_est <- c("c17002_001e","c17002_008e")
lt_2x_pov_moe <- c("c17002_001m","c17002_008m")
# 16 or older population
acs_pop16p <- c("b23001_001e")
acs_workers16p <- c("b08301_001e")
acs_workers16p_shr <- c("b23001_001e","b08301_001e")
acs_pop75p <- c("B01001_023E","B01001_024E","B01001_025E","B01001_047E","B01001_048E","B01001_049E")
acs_pop18u <- c("B01001_001E","B01001_003E","B01001_004E","B01001_005E","B01001_006E","B01001_027E","B01001_028E","B01001_029E","B01001_030E")
#all acs fields
acs_fields <- c(acs_noninst_pop,acs_sr_noninst_pop,acs_disabled_pop,acs_sr_disab_pop,
acs_hh,acs_0veh_hh,acs_low_inc_hh,acs_pop_5p,acs_lep_pop,pov_stat_det_est,
pov_stat_det_moe,lt_2x_pov_est,lt_2x_pov_moe,acs_pop16p,acs_workers16p,
acs_workers16p_shr,acs_pop75p,acs_pop18u)
print("Done.")
# Grab Census 2020 geography, total population, minority data, older adults, youth
# download block groups and minority data and total population data
bg20 <-
get_decennial(geography = 'block group',
variables = c('P2_001N', 'P2_003N', # white and minority
'P12_001N', 'P12_023N', 'P12_024N', 'P12_025N', 'P12_047N',
'P12_048N', 'P12_049N', # Older adults
'P12_003N', 'P12_004N', 'P12_005N', 'P12_006N', 'P12_027N',
'P12_028N', 'P12_029N', 'P12_030N'), # Youth
year = 2020,
sumfile = "dhc",
state = "MA",
output = 'wide')
acs_yr <- 2022
# download block group geography and demographic data
acsbgs <- get_acs(geography = 'block group',
variables = toupper(acs_fields),
year = acs_yr,
state = "MA",
output = 'wide')
# download tract geography and demographic data
acstrts <- get_acs(geography = 'tract',
variables = toupper(acs_fields),
year = acs_yr,
state = "MA",
output = 'wide')
View(bg20)
#total population
bg20$TotalPop <- bg20$P2_001N
#minority population
bg20$MinPop <- bg20$TotalPop - bg20$P2_005N
#total population
bg20$TotalPop <- bg20$P2_001N
#minority population
bg20$MinPop <- bg20$TotalPop - bg20$P2_003N
# Older adults
bg20 <- bg20 %>%
mutate(OldPop = sum(P12_001N, P12_023N, P12_024N, P12_025N, P12_047N,
P12_048N, P12_049N))
#total population
bg20$TotalPop <- bg20$P2_001N
#minority population
bg20$MinPop <- bg20$TotalPop - bg20$P2_003N
# Older adults
bg20 <- bg20 %>%
mutate(OldPop = sum(P12_001N, P12_023N, P12_024N, P12_025N, P12_047N,
P12_048N, P12_049N),
YouthPop = sum(P12_003N, P12_004N, P12_005N, P12_006N, P12_027N,
P12_028N, P12_029N, P12_030N))
knitr::opts_chunk$set(echo = TRUE)
results_dir <- "\\Users\\sstrumwasser.AD\\Documents\\ArcGIS\\Projects\\TIP_25_29\\results"
results_dir <- "\\Users\\sstrumwasser.AD\\Documents\\ArcGIS\\Projects\\TIP_25_29\\results"
test <- paste0(results_dir, "\\lines_af_bg_eighth_mi.csv")
read_csv(test)
library(dplyr)
library(tidycensus)
library(tidyverse)
library(stringr)
library(ggplot2)
library(readr)
read_csv(test)
tes_csv <- read_csv(test)
View(tes_csv)
results_dir <- "\\Users\\sstrumwasser.AD\\Documents\\ArcGIS\\Projects\\TIP_25_29\\results\\"
test <-
input_blkgrps_table <- do.call("rbind", list(
read_csv(paste0(results_dir, "\\lines_af_bg_eighth_mi.csv")),
read_csv(paste0(results_dir, "\\lines_af_bg_quart_mi.csv")),
read_csv(paste0(results_dir, "\\lines_af_bg_half_mi.csv")),
read_csv(paste0(results_dir, "\\polygons_af_bg.csv")),
))
test <-
input_blkgrps_table <- do.call("rbind", list(
read_csv(paste0(results_dir, "\\lines_af_bg_eighth_mi.csv")),
read_csv(paste0(results_dir, "\\lines_af_bg_quart_mi.csv")),
read_csv(paste0(results_dir, "\\lines_af_bg_half_mi.csv")),
read_csv(paste0(results_dir, "\\polygons_af_bg.csv"))
))
input_blkgrps_table <- do.call("rbind", list(
read_csv(paste0(results_dir, "\\lines_af_bg_eighth_mi.csv")),
read_csv(paste0(results_dir, "\\lines_af_bg_quart_mi.csv")),
read_csv(paste0(results_dir, "\\lines_af_bg_half_mi.csv")),
read_csv(paste0(results_dir, "\\polygons_af_bg.csv"))
))
input_blkgrps_table <- do.call("rbind", list(
read_csv(paste0(results_dir, "\\lines_af_bg_eighth_mi.csv")),
read_csv(paste0(results_dir, "\\lines_af_bg_quart_mi.csv")),
read_csv(paste0(results_dir, "\\lines_af_bg_half_mi.csv")),
read_csv(paste0(results_dir, "\\polygons_af_bg.csv"))
))
input_tracts_table <- do.call("rbind", list(
read_csv(paste0(results_dir, "\\lines_af_tract_eighth_mi.csv")),
read_csv(paste0(results_dir, "\\lines_af_tract_quart_mi.csv")),
read_csv(paste0(results_dir, "\\lines_af_tract_half_mi.csv")),
read_csv(paste0(results_dir, "\\polygons_af_tract.csv"))
))
View(input_tracts_table)
library(tidycensus)
library(tidyverse)
# UPDATED FOR 2025-2029 TIP 2/15/24 - ACS YEAR UPDATED TO 2022
mpo_towns_table <- read_csv("C:\\Users\\sstrumwasser.AD\\Documents\\ArcGIS\\Projects\\needs_assessment_proximity\\mpo_towns.csv")
bluebikes_towns_table <- read_csv("C:\\Users\\sstrumwasser.AD\\Documents\\ArcGIS\\Projects\\needs_assessment_proximity\\Bluebikes_Towns.csv")
# ACS 2022 Fields
# universe
acs_noninst_pop <- c("b18101_001e")
# senior
acs_sr_noninst_pop <- c("b18101_015e","b18101_018e","b18101_034e","b18101_037e")
# disabled
acs_disabled_pop <- c("b18101_004e","b18101_007e","b18101_010e","b18101_013e","b18101_016e","b18101_019e",
"b18101_023e","b18101_026e","b18101_029e","b18101_032e","b18101_035e","b18101_038e")
# senior disabled
acs_sr_disab_pop <- c("b18101_016e","b18101_019e","b18101_035e","b18101_038e")
# lep universe
acs_pop_5p <- c("b16004_001e")
# lep populations
acs_lep_pop <- c("b16004_001e","b16004_003e","b16004_005e","b16004_010e","b16004_015e","b16004_020e","b16004_025e","b16004_027e","b16004_032e","b16004_037e",
"b16004_042e","b16004_047e","b16004_049e","b16004_054e","b16004_059e","b16004_064e")
# poverty status determined estimate
pov_stat_det_est <- c("c17002_001e")
# poverty status determined margin of error
pov_stat_det_moe <- c("c17002_001m")
# income less than 2x poverty level population
lt_2x_pov_est <- c("c17002_001e","c17002_008e")
lt_2x_pov_moe <- c("c17002_001m","c17002_008m")
# youth and older adults - not used for 2025-29 TIP
acs_pop75p <- c("B01001_023E","B01001_024E","B01001_025E","B01001_047E","B01001_048E","B01001_049E")
acs_pop18u <- c("B01001_001E","B01001_003E","B01001_004E","B01001_005E","B01001_006E","B01001_027E","B01001_028E","B01001_029E","B01001_030E")
#all acs fields
acs_fields <- c(acs_noninst_pop,acs_sr_noninst_pop,acs_disabled_pop,acs_sr_disab_pop,
acs_hh,acs_0veh_hh,acs_low_inc_hh,acs_pop_5p,acs_lep_pop,pov_stat_det_est,
pov_stat_det_moe,lt_2x_pov_est,lt_2x_pov_moe,acs_pop16p,acs_workers16p,
acs_workers16p_shr,acs_pop75p,acs_pop18u)
library(tidycensus)
library(tidyverse)
# UPDATED FOR 2025-2029 TIP 2/15/24 - ACS YEAR UPDATED TO 2022
mpo_towns_table <- read_csv("C:\\Users\\sstrumwasser.AD\\Documents\\ArcGIS\\Projects\\needs_assessment_proximity\\mpo_towns.csv")
bluebikes_towns_table <- read_csv("C:\\Users\\sstrumwasser.AD\\Documents\\ArcGIS\\Projects\\needs_assessment_proximity\\Bluebikes_Towns.csv")
# ACS 2022 Fields
# universe
acs_noninst_pop <- c("b18101_001e")
# senior
acs_sr_noninst_pop <- c("b18101_015e","b18101_018e","b18101_034e","b18101_037e")
# disabled
acs_disabled_pop <- c("b18101_004e","b18101_007e","b18101_010e","b18101_013e","b18101_016e","b18101_019e",
"b18101_023e","b18101_026e","b18101_029e","b18101_032e","b18101_035e","b18101_038e")
# senior disabled
acs_sr_disab_pop <- c("b18101_016e","b18101_019e","b18101_035e","b18101_038e")
# lep universe
acs_pop_5p <- c("b16004_001e")
# lep populations
acs_lep_pop <- c("b16004_001e","b16004_003e","b16004_005e","b16004_010e","b16004_015e","b16004_020e","b16004_025e","b16004_027e","b16004_032e","b16004_037e",
"b16004_042e","b16004_047e","b16004_049e","b16004_054e","b16004_059e","b16004_064e")
# poverty status determined estimate
pov_stat_det_est <- c("c17002_001e")
# poverty status determined margin of error
pov_stat_det_moe <- c("c17002_001m")
# income less than 2x poverty level population
lt_2x_pov_est <- c("c17002_001e","c17002_008e")
lt_2x_pov_moe <- c("c17002_001m","c17002_008m")
# youth and older adults - not used for 2025-29 TIP
acs_pop75p <- c("B01001_023E","B01001_024E","B01001_025E","B01001_047E","B01001_048E","B01001_049E")
acs_pop18u <- c("B01001_001E","B01001_003E","B01001_004E","B01001_005E","B01001_006E","B01001_027E","B01001_028E","B01001_029E","B01001_030E")
#all acs fields
acs_fields <- c(acs_noninst_pop,acs_sr_noninst_pop,acs_disabled_pop,
acs_pop_5p,acs_lep_pop,pov_stat_det_est,
pov_stat_det_moe,lt_2x_pov_est,lt_2x_pov_moe,acs_pop16p,acs_workers16p,
acs_workers16p_shr,acs_pop75p,acs_pop18u)
library(tidycensus)
library(tidyverse)
# UPDATED FOR 2025-2029 TIP 2/15/24 - ACS YEAR UPDATED TO 2022
mpo_towns_table <- read_csv("C:\\Users\\sstrumwasser.AD\\Documents\\ArcGIS\\Projects\\needs_assessment_proximity\\mpo_towns.csv")
bluebikes_towns_table <- read_csv("C:\\Users\\sstrumwasser.AD\\Documents\\ArcGIS\\Projects\\needs_assessment_proximity\\Bluebikes_Towns.csv")
# ACS 2022 Fields
# universe
acs_noninst_pop <- c("b18101_001e")
# senior
acs_sr_noninst_pop <- c("b18101_015e","b18101_018e","b18101_034e","b18101_037e")
# disabled
acs_disabled_pop <- c("b18101_004e","b18101_007e","b18101_010e","b18101_013e","b18101_016e","b18101_019e",
"b18101_023e","b18101_026e","b18101_029e","b18101_032e","b18101_035e","b18101_038e")
# senior disabled
acs_sr_disab_pop <- c("b18101_016e","b18101_019e","b18101_035e","b18101_038e")
# lep universe
acs_pop_5p <- c("b16004_001e")
# lep populations
acs_lep_pop <- c("b16004_001e","b16004_003e","b16004_005e","b16004_010e","b16004_015e","b16004_020e","b16004_025e","b16004_027e","b16004_032e","b16004_037e",
"b16004_042e","b16004_047e","b16004_049e","b16004_054e","b16004_059e","b16004_064e")
# poverty status determined estimate
pov_stat_det_est <- c("c17002_001e")
# poverty status determined margin of error
pov_stat_det_moe <- c("c17002_001m")
# income less than 2x poverty level population
lt_2x_pov_est <- c("c17002_001e","c17002_008e")
lt_2x_pov_moe <- c("c17002_001m","c17002_008m")
# youth and older adults - not used for 2025-29 TIP
acs_pop75p <- c("B01001_023E","B01001_024E","B01001_025E","B01001_047E","B01001_048E","B01001_049E")
acs_pop18u <- c("B01001_001E","B01001_003E","B01001_004E","B01001_005E","B01001_006E","B01001_027E","B01001_028E","B01001_029E","B01001_030E")
#all acs fields
acs_fields <- c(acs_noninst_pop,acs_sr_noninst_pop,acs_disabled_pop,
acs_pop_5p,acs_lep_pop,pov_stat_det_est,
pov_stat_det_moe,lt_2x_pov_est,lt_2x_pov_moe,
acs_pop75p,acs_pop18u)
# download block group geography and demographic data
acs_towns <- get_acs(geography = 'county subdivision', variables = toupper(acs_fields), year = acs_yr, state = "MA", output = 'wide')
library(tidycensus)
library(tidyverse)
# UPDATED FOR 2025-2029 TIP 2/15/24 - ACS YEAR UPDATED TO 2022
acs_yr <- 2022
mpo_towns_table <- read_csv("C:\\Users\\sstrumwasser.AD\\Documents\\ArcGIS\\Projects\\needs_assessment_proximity\\mpo_towns.csv")
bluebikes_towns_table <- read_csv("C:\\Users\\sstrumwasser.AD\\Documents\\ArcGIS\\Projects\\needs_assessment_proximity\\Bluebikes_Towns.csv")
# ACS 2022 Fields
# universe
acs_noninst_pop <- c("b18101_001e")
# senior
acs_sr_noninst_pop <- c("b18101_015e","b18101_018e","b18101_034e","b18101_037e")
# disabled
acs_disabled_pop <- c("b18101_004e","b18101_007e","b18101_010e","b18101_013e","b18101_016e","b18101_019e",
"b18101_023e","b18101_026e","b18101_029e","b18101_032e","b18101_035e","b18101_038e")
# senior disabled
acs_sr_disab_pop <- c("b18101_016e","b18101_019e","b18101_035e","b18101_038e")
# lep universe
acs_pop_5p <- c("b16004_001e")
# lep populations
acs_lep_pop <- c("b16004_001e","b16004_003e","b16004_005e","b16004_010e","b16004_015e","b16004_020e","b16004_025e","b16004_027e","b16004_032e","b16004_037e",
"b16004_042e","b16004_047e","b16004_049e","b16004_054e","b16004_059e","b16004_064e")
# poverty status determined estimate
pov_stat_det_est <- c("c17002_001e")
# poverty status determined margin of error
pov_stat_det_moe <- c("c17002_001m")
# income less than 2x poverty level population
lt_2x_pov_est <- c("c17002_001e","c17002_008e")
lt_2x_pov_moe <- c("c17002_001m","c17002_008m")
# youth and older adults - not used for 2025-29 TIP
acs_pop75p <- c("B01001_023E","B01001_024E","B01001_025E","B01001_047E","B01001_048E","B01001_049E")
acs_pop18u <- c("B01001_001E","B01001_003E","B01001_004E","B01001_005E","B01001_006E","B01001_027E","B01001_028E","B01001_029E","B01001_030E")
#all acs fields
acs_fields <- c(acs_noninst_pop,acs_sr_noninst_pop,acs_disabled_pop,
acs_pop_5p,acs_lep_pop,pov_stat_det_est,
pov_stat_det_moe,lt_2x_pov_est,lt_2x_pov_moe,
acs_pop75p,acs_pop18u)
# download block group geography and demographic data
acs_towns <- get_acs(geography = 'county subdivision', variables = toupper(acs_fields), year = acs_yr, state = "MA", output = 'wide')
# get decennial data
bg20_towns <- get_decennial(geography = 'county subdivision',
variables = c('P2_001N', 'P2_003N', # white and minority
'P12_001N', 'P12_023N', 'P12_024N', 'P12_025N', 'P12_047N',
'P12_048N', 'P12_049N', # Older adults
'P12_003N', 'P12_004N', 'P12_005N', 'P12_006N', 'P12_027N',
'P12_028N', 'P12_029N', 'P12_030N'), # Youth
year = 2020,
sumfile = "dhc",
state = "MA",
output = 'wide')
bg20_towns$MinPop <- bg20_towns$P2_001N - bg20_towns$P2_003N
# Older adults and youth
bg20_towns <- bg20_towns %>%
mutate(OldPop = sum(P12_001N, P12_023N, P12_024N, P12_025N, P12_047N,
P12_048N, P12_049N),
YouthPop = sum(P12_003N, P12_004N, P12_005N, P12_006N, P12_027N,
P12_028N, P12_029N, P12_030N))
# standardize town name capitalization
acs_towns$TOWN <- toupper(sub("([A-Za-z]+).*", "\\1", acs_towns$NAME))
bg20_towns$TOWN <- toupper(sub("([A-Za-z]+).*", "\\1", bg20_towns$NAME))
# fix North Reading
acs_towns$TOWN[grepl('North Reading', acs_towns$NAME)] <- 'NORTH READING'
bg20_towns$TOWN[grepl('North Reading', bg20_towns$NAME)] <- 'NORTH READING'
# ACS processing ---------------------------------------------------------
####low inc####
acs_towns$pov_stat_det_est <- acs_towns$C17002_001E
acs_towns$pov_stat_det_moe <- acs_towns$C17002_001M
acs_towns$lt_2x_pov_est <- acs_towns$C17002_001E - acs_towns$C17002_008E
####LEP####
acs_towns$acs_pop_5p <- acs_towns$B16004_001E
acs_towns$acs_lep_pop <- (acs_towns$B16004_001E - acs_towns$B16004_003E - acs_towns$B16004_005E -
acs_towns$B16004_010E - acs_towns$B16004_015E - acs_towns$B16004_020E -
acs_towns$B16004_025E - acs_towns$B16004_027E - acs_towns$B16004_032E -
acs_towns$B16004_037E - acs_towns$B16004_042E - acs_towns$B16004_047E -
acs_towns$B16004_049E - acs_towns$B16004_054E - acs_towns$B16004_059E -
acs_towns$B16004_064E)
acs_towns$bg_totpop <- acs_towns$B01001_001E
#### DISAB POP ####
acs_towns$acs_disab_pop <- (acs_towns$B18101_004E + acs_towns$B18101_007E + acs_towns$B18101_010E +
acs_towns$B18101_013E + acs_towns$B18101_016E + acs_towns$B18101_019E +
acs_towns$B18101_023E + acs_towns$B18101_026E + acs_towns$B18101_029E +
acs_towns$B18101_032E + acs_towns$B18101_035E + acs_towns$B18101_038E)
# join census tables  to towns table
towns_census <- mpo_towns_table %>%
left_join(bg20_towns, by='TOWN') %>%
left_join(acs_towns, by='TOWN')
# summarise for full mpo
mpo_stats <- towns_census %>%
summarise(
TotalPop_MPO = sum(P2_001N),
MinPop_MPO = sum(MinPop),
NonMinPop_MPO = sum(P2_003N),
low_inc_pop_MPO = sum(lt_2x_pov_est),
lep_pop_MPO = sum(acs_lep_pop),
disab_pop_MPO = sum(acs_disab_pop),
youth_pop_MPO = sum(YouthPop),
elderly_pop_MPO = sum(OldPop)
)
write_csv(mpo_stats, "C:\\Users\\sstrumwasser.AD\\Documents\\GitHub\\TIP_Demographics\\mpo_pops.csv")
View(mpo_stats)
